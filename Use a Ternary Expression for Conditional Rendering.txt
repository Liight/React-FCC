
const inputStyle = {
  width: 235,
  margin: 5
}

class CheckUserAge extends React.Component {
  constructor(props) {
    super(props);
    // change code below this line
    this.state = {
      input: '',
      userAge: ''
    }
    // change code above this line
    this.submit = this.submit.bind(this);
    this.handleChange = this.handleChange.bind(this);
  }
  handleChange(e) {
    this.setState({
      input: e.target.value,
      userAge: ''
    });
  }
  submit() {
    this.setState({
      userAge: this.state.input
    });
  }
  render() {
    const buttonOne = <button onClick={this.submit}>Submit</button>;
    const buttonTwo = <button>You May Enter</button>;
    const buttonThree = <button>You Shall Not Pass</button>;
    return (
      <div>
        <h3>Enter Your Age to Continue</h3>
        <input
          style={inputStyle}
          type="number"
          value={this.state.input}
          onChange={this.handleChange} /><br />
        {
            /* Assuming the person startes to enter a number in the search field 
               If < 18 is entered buttonThree is rendered
               If >= 18 is entered buttonTwo is rendered
               Else buttonOne is rendered (submit) 
               Note: The constants (buttons) do not need to be called with 'this',
                     We use the user age parameter and not user input because handleChange has already been called 
                     We are using a 2-stage ternary operator If(if(true,false),true) 
                     This code assumes the handleChange method has updated this.state.userAge */
            this.state.userAge.length > 0 ? (this.state.userAge < 18 ? buttonThree : buttonTwo) : buttonOne
        }
      </div>
    );
  }
};